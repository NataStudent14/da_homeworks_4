task13 (lesson3)
--Компьютерная фирма: Вывести список всех продуктов и производителя с указанием типа продукта (pc, printer, laptop). Вывести: model, maker, type

select p.model, maker, type 
from product
join pc p 
on p.model = product.model 
union all 
select p2.model, maker, p2.type
from product p2 
join printer p3 
on p2.model = p3.model 
union all 
select p2.model, maker, p2.type
from product p2 
join laptop l 
on p2.model = l.model

--task14 (lesson3)
--Компьютерная фирма: При выводе всех значений из таблицы printer дополнительно вывести для тех, у кого цена вышей средней PC - "1", у остальных - "0"

select *,
case when
price > (select avg(price) from pc p2 )
then 1
else 0
end flag
from printer


--task15 (lesson3)
--Корабли: Вывести список кораблей, у которых class отсутствует (IS NULL)

select name, s.class from ships s 
where s.class is null
union 
select ship, class
from classes c2 
join outcomes o 
on c2.class = o.ship 
where c2.class is null




--task16 (lesson3)
--Корабли: Укажите сражения, которые произошли в годы, не совпадающие ни с одним из годов спуска кораблей на воду.

select name
from battles
where year(date) not in (select launched from ships
Where launched is not null)

      
--task17 (lesson3)
--Корабли: Найдите сражения, в которых участвовали корабли класса Kongo из таблицы Ships.
select battle from outcomes
where ship in (select name
from ships
where class = 'Kongo')



--task1  (lesson4)
-- Компьютерная фирма: Сделать view (название all_products_flag_300) для всех товаров (pc, printer, laptop) с флагом, если стоимость больше > 300. Во view три колонки: model, price, flag


create view all_products_flag_300 as
with all_products_flag_300 as
(select model, price,
case when price>300
then 1
else 0
end flag
from pc
union 
select model, price,
case when price>300
then 1
else 0
end flag
from printer
union 
select model, price,
case when price>300
then 1
else 0
end flag
from laptop)
select * 
from all_products_flag_300



--task2  (lesson4)
-- Компьютерная фирма: Сделать view (название all_products_flag_avg_price) для всех товаров (pc, printer, laptop) с флагом, если стоимость больше cредней . Во view три колонки: model, price, flag

create view all_products_flag_avg_price as
with all_products_flag_avg_price as
(select pc.model, price,
case when price> (select avg(price) from pc)
then 1
else 0
end flag
from pc
union 
select model, price,
case when price>(select avg(price) from printer)
then 1
else 0
end flag
from printer
union 
select model, price,
case when price>(select avg(price) from laptop)
then 1
else 0
end flag
from laptop)
select * 
from all_products_flag_avg_price

--task3  (lesson4)
-- Компьютерная фирма: Вывести все принтеры производителя = 'A' со стоимостью выше средней по принтерам производителя = 'D' и 'C'. Вывести model

select p.model
from printer p 
join product p2 
on p.model = p2.model
where maker = 'A'
and 
price > (select avg(price) from printer
join product p2 
on printer.model = p2.model
where maker = 'D' or maker = 'C')


--task4 (lesson4)
-- Компьютерная фирма: Вывести все товары производителя = 'A' со стоимостью выше средней по принтерам производителя = 'D' и 'C'. Вывести model

select p.model
from product p
join printer p2
on p.model = p2.model
where maker = 'A'
and
price > (select avg(price) from printer
join product p2 
on printer.model = p2.model
where maker = 'D' or maker = 'C')
union all
select p.model
from product p
join pc p3
on p.model = p3.model
where maker = 'A'
and
price > (select avg(price) from printer
join product p2 
on printer.model = p2.model
where maker = 'D' or maker = 'C')
union all
select p.model
from product p
join laptop l
on p.model = l.model
where maker = 'A'
and
price > (select avg(price) from printer
join product p2 
on printer.model = p2.model
where maker = 'D' or maker = 'C')

--task5 (lesson4)
-- Компьютерная фирма: Какая средняя цена среди уникальных продуктов производителя = 'A' (printer & laptop & pc)


with table_2 as
(select distinct p2.model, price, maker
from product p
join printer p2
on p.model = p2.model
where maker = 'A'
union 
select distinct p3.model, price, maker
from product p
join pc p3
on p.model = p3.model
where maker = 'A'
union
select distinct l.model, price, maker
from product p
join laptop l
on p.model = l.model
where maker = 'A')
select avg(price) 
from table_2 

--task6 (lesson4)
-- Компьютерная фирма: Сделать view с количеством товаров (название count_products_by_makers) по каждому производителю. Во view: maker, count

create view count_products_by_makers as
with count_products_by_makers as
(select maker, count(model)
from product
where maker = 'A'
group by maker
union 
select maker, count(model)
from product
where maker = 'B'
group by maker
union 
select maker, count(model)
from product
where maker = 'C'
group by maker
union 
select maker, count(model)
from product
where maker = 'D'
group by maker
union select maker, count(model)
from product
where maker = 'E'
group by maker)
select * 
from count_products_by_makers



--task7 (lesson4)
-- По предыдущему view (count_products_by_makers) сделать график в colab (X: maker, y: count)



--task8 (lesson4)
-- Компьютерная фирма: Сделать копию таблицы printer (название printer_updated) и удалить из нее все принтеры производителя 'D'
create table printer_updated as table printer;
DELETE from printer_updated
WHERE model in 
(
select model
from product
where maker = 'D'
);
select *
from printer_updated


--task9 (lesson4)
-- Компьютерная фирма: Сделать на базе таблицы (printer_updated) view с дополнительной колонкой производителя (название printer_updated_with_makers)

create view printer_updated_with_makers as
with printer_updated_with_makers as
(select code, printer_updated.model, color, printer_updated.type, price, maker
from printer_updated
join product 
on product.model = printer_updated.model)
select *
from printer_updated_with_makers


--task10 (lesson4)
-- Корабли: Сделать view c количеством потопленных кораблей и классом корабля (название sunk_ships_by_classes). Во view: count, class (если значения класса нет/IS NULL, то заменить на 0)


create view sunk_ships_by_classes as 
with all_ships as 
(
		select name, class
		from ships
	union all
		select distinct ship, NULL as class
		from Outcomes
		where ship not in (select name from ships) 
)
select class, count(*) from all_ships where name in 
	(
	select ship
	from outcomes
	where result = 'sunk'
	) group by class;

select *
from sunk_ships_by_classes

--task11 (lesson4)
-- Корабли: По предыдущему view (sunk_ships_by_classes) сделать график в colab (X: class, Y: count)

--task12 (lesson4)
-- Корабли: Сделать копию таблицы classes (название classes_with_flag) и добавить в нее flag: если количество орудий больше или равно 9 - то 1, иначе 0

create table classes_with_flag as 
select *,
case 
	when numguns >= 9 then 1
	else 0
end flag
from classes;

select *
from classes_with_flag

--task13 (lesson4)
-- Корабли: Сделать график в colab по таблице classes с количеством классов по странам (X: country, Y: count)

--task14 (lesson4)
-- Корабли: Вернуть количество кораблей, у которых название начинается с буквы "O" или "M".

with names as
	( 
	select name
	from ships 
	where name like 'O%' or name like 'M%'
	)
select count(*) from names

--task15 (lesson4)
-- Корабли: Вернуть количество кораблей, у которых название состоит из двух слов.

with names_1 as
	( 
	select *
	from ships
	where name like '% %'
	)
select count(*) from names_1

--task16 (lesson4)
-- Корабли: Построить график с количеством запущенных на воду кораблей и годом запуска (X: year, Y: count)
